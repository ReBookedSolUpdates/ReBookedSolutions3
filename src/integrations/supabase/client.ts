// This file is automatically generated. Do not edit it directly.
import { createClient } from "@supabase/supabase-js";
import type { Database } from "./types";

import { ENV } from "@/config/environment";

// Validate Supabase configuration before creating client
const validateSupabaseConfig = () => {
  if (!ENV.VITE_SUPABASE_URL || ENV.VITE_SUPABASE_URL.trim() === "") {
    throw new Error(
      "VITE_SUPABASE_URL is required. Please set this environment variable.",
    );
  }

  if (!ENV.VITE_SUPABASE_ANON_KEY || ENV.VITE_SUPABASE_ANON_KEY.trim() === "") {
    throw new Error(
      "VITE_SUPABASE_ANON_KEY is required. Please set this environment variable.",
    );
  }

  // Basic URL validation
  try {
    new URL(ENV.VITE_SUPABASE_URL);
  } catch {
    throw new Error(
      `Invalid VITE_SUPABASE_URL: "${ENV.VITE_SUPABASE_URL}". Must be a valid URL.`,
    );
  }
};

// Validate configuration
validateSupabaseConfig();

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  ENV.VITE_SUPABASE_URL,
  ENV.VITE_SUPABASE_ANON_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
      flowType: "pkce",
      // Better error handling for failed auth attempts
      debug: import.meta.env.DEV,
    },
    realtime: {
      // Enhanced WebSocket configuration for better reliability
      params: {
        eventsPerSecond: 10,
      },
      // Add heartbeat to keep connections alive
      heartbeatIntervalMs: 30000,
      // Reconnection settings with limited attempts
      reconnectAfterMs: (retries) => {
        // Stop attempting after 3 retries to prevent endless loops
        if (retries >= 3) {
          console.log(`[Supabase] Max reconnection attempts reached (${retries + 1}), stopping`);
          return null; // Stop reconnecting
        }
        // Exponential backoff: 2s, 5s, 10s
        const delay = Math.min(2000 * Math.pow(2, retries), 10000);
        console.log(`[Supabase] Reconnecting in ${delay}ms (attempt ${retries + 1}/3)`);
        return delay;
      },
      // Increase timeout for slower connections
      timeout: 20000,
      // Log WebSocket events in development
      logger: import.meta.env.DEV ? (level, message, ...args) => {
        if (level === 'error' || level === 'warn') {
          console.log(`[Supabase Realtime ${level.toUpperCase()}]`, message, ...args);
        }
      } : undefined,
    },
    global: {
      headers: {
        'X-Client-Info': 'rebooked-marketplace',
      },
    },
  },
);
